import vxeEn from "vxe-table/lib/locale/lang/en-US"

export default {
  layout: {
    test: "test Lang"
  },
  routes: {
    login: "Login",
    dashboard: "Dashboard",
    welcome: "Welcome",
    workplace: "Workplace",
    analysis: "Analysis",
    notfound: "not found",
    system: "System Management",
    user: "User Management",
    role: "Role Management",
    menu: "Menu Management",
    component: "Component Element",
    form: "Form",
    table: "Table",
    chart: "Echarts",
    defaultTable: "Default Table",
    useTable: "UseTable",
    VxeTable: "VxeTable",
    defaultForm: "Default Form",
    useForm: "UseForm",
    authority: "Authority",
    btnPerm: "Button Permissions",
    workflow: "Workflow",
    useX6: "Use X6",
    qrcode: "Qrcode"
  },
  tagsOperations: {
    noTitle: "No Title",
    reload: "Reload",
    closeTag: "Close Tab",
    closeLeftTag: "Close The Left Tab",
    closeRightTag: "Close The Right Tab",
    closeOtherTag: "Close Other Tabs",
    closeAllTag: "Close All Tabs"
  },
  personalCenter: {
    personalCenter: "Personal Center",
    changePassword: "Change Password",
    loginOut: "Login Out"
  },
  size: {
    default: "Default",
    small: "Compact",
    large: "Medium"
  },
  common: {
    required: "This is required",
    lengthRange: "The length should be between {min} and {max}",
    notSpace: "Spaces are not allowed",
    notSpecialCharacters: "Special characters are not allowed",
    inputText: "Please input",
    selectText: "Please select",
    startTimeText: "Start time",
    endTimeText: "End time"
  },
  login: {
    login: "Login",
    username: "Username",
    password: "Password",
    outDesp: "Are you sure you want to log out?",
    confirm: "Confirm",
    cancel: "Cancel",
    outSuccess: "Successfully logged out",
    warn: "Warning",
    tabQrLogin: "Qrcode Login",
    tips: "A backend management system framework based on Typescript+Vue3+vite+Vueuse"
  },
  formDemo: {
    input: "Input",
    inputNumber: "InputNumber",
    default: "Default",
    icon: "Icon",
    mixed: "Mixed",
    password: "Password",
    textarea: "Textarea",
    remoteSearch: "Remote search",
    slot: "Slot",
    position: "Position",
    autocomplete: "Autocomplete",
    select: "Select",
    optionSlot: "Option Slot",
    selectGroup: "Select Group",
    selectV2: "SelectV2",
    cascader: "Cascader",
    switch: "Switch",
    rate: "Rate",
    colorPicker: "Color Picker",
    transfer: "Transfer",
    render: "Render",
    radio: "Radio",
    radioGroup: "Radio Group",
    button: "Button",
    checkbox: "Checkbox",
    checkboxButton: "Checkbox Button",
    checkboxGroup: "Checkbox Group",
    slider: "Slider",
    datePicker: "Date Picker",
    shortcuts: "Shortcuts",
    today: "Today",
    yesterday: "Yesterday",
    aWeekAgo: "A week ago",
    week: "Week",
    year: "Year",
    month: "Month",
    dates: "Dates",
    daterange: "Date Range",
    monthrange: "Month Range",
    dateTimePicker: "DateTimePicker",
    dateTimerange: "Datetime Range",
    timePicker: "Time Picker",
    timeSelect: "Time Select",
    inputPassword: "input Password",
    passwordStrength: "Password Strength",
    defaultForm: "All examples",
    formDes:
      "The secondary encapsulation of form components based on ElementPlus realizes data-driven and supports all Form parameters",
    example: "example",
    operate: "operate",
    change: "Change",
    restore: "Restore",
    disabled: "Disabled",
    disablement: "Disablement",
    delete: "Delete",
    add: "Add",
    setValue: "Set value",
    resetValue: "Reset value",
    set: "Set",
    subitem: "Subitem",
    formValidation: "Form validation",
    verifyReset: "Verify reset",
    form: "Form",
    focus: "Focus",
    treeSelect: "Tree Select",
    showCheckbox: "Show Checkbox",
    selectAnyLevel: "Select Any Level",
    multiple: "Multiple",
    filterable: "Filterable",
    customContent: "Custom content",
    lazyLoad: "Lazy load",
    upload: "Upload",
    userAvatar: "User avatar",
    iconPicker: "Icon picker",
    iAgree: "I agree"
  },
  result: {
    notfound: "Sorry, the page you visited does not exist."
  },
  ...vxeEn
}
